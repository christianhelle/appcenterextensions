name: SonarCloud
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**/*'
      - '!.github/workflows/sonar-cloud.yml'
      - '!src/**/*.csproj'
      - '!src/**/*.cs'
    branches: 
    - '*'
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\src\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\src\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\src\.sonar\scanner

      - name: Prepare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        working-directory: src
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
              /k:"christianhelle_appcenterextensions" `
              /o:"christianhelle-github" `
              /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
              /d:sonar.host.url="https://sonarcloud.io" `
              /d:sonar.cs.vstest.reportsPaths=**/*.trx `
              /d:sonar.cs.vscoveragexml.reportsPaths=AppCenterExtensions.Tests/TestResults/**/*.coveragexml

      - name: Install .NET MAUI workload
        run: |
          dotnet workload restore --project AppCenterExtensions.Maui.csproj
          dotnet workload restore maui-android --project AppCenterExtensions.Maui.csproj
        working-directory: src/AppCenterExtensions.Maui

      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: src

      - name: Test with dotnet
        run: dotnet test --no-build --configuration Release --collect "Code coverage"
        working-directory: src

      - name: Convert Code Coverage
        working-directory: src
        continue-on-error: true
        run: |
          dotnet tool update dotnet-coverageconverter --tool-path .tools\coverage
          .\.tools\coverage\dotnet-coverageconverter.exe --CoverageFilesFolder "AppCenterExtensions.Tests\TestResults"

      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        working-directory: src
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
